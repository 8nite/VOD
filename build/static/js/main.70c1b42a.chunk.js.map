{"version":3,"sources":["components/Index.js","components/Header.js","components/Video.js","components/VideoList.js","reducer/index.js","store.js","index.js"],"names":["Index","props","state","entries","require","config","path","__dirname","console","log","process","fetch","BE_ADDRESS","this","filter","then","response","json","setState","changeFilter","watched","onEnded","React","Component","Header","expand","variant","bg","Brand","href","Toggle","aria-controls","Collapse","id","className","Link","onClick","value","Video","useState","show","setShow","handleClose","handleShow","Array","isArray","length","useKeyboardArrows","map","entry","style","src","images","url","alt","title","key","controls","playsInline","light","playIcon","contents","Button","Modal","onHide","closeButton","Title","Body","description","type","Date","publishedDate","toString","availableDate","Footer","VideoList","categories","some","category","includes","action","text","temp","push","configureStore","initialState","storage","reducer","persistCombineReducers","root","rootReducer","store","createStore","getState","persistor","persistStore","subscribe","updateWatched","App","onChangeFilter","e","dispatch","nativeEvent","target","window","location","reload","ConnectedApp","connect","render","document","getElementById"],"mappings":"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","file":"static/js/main.70c1b42a.chunk.js","sourcesContent":["import React from 'react'\nimport VideoList from './VideoList'\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './Header';\nimport dotenv from 'dotenv'\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      entries: []\n    }\n  }\n\n  componentDidMount() {\n    require('dotenv').config({path:__dirname+'/.env'});\n    console.log(process.env)\n    fetch(process.env.BE_ADDRESS + '/?filter=' + this.props.filter)\n      .then(response => response.json())\n      .then(entries => {\n        this.setState(entries)\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        {process.env.BE_ADDRESS}\n        <Header changeFilter={this.props.changeFilter}/>\n        <VideoList entries={this.state.entries} filter={this.props.filter} watched={this.props.watched} onEnded={this.props.onEnded}/>\n      </div>          \n    )\n  }\n}\n\nexport default Index\n","import React from 'react'\nimport { Navbar, Nav, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types'\n\nconst Header = ({ changeFilter }) => (\n  <header>\n    <Navbar expand=\"lg\" variant=\"dark\" bg=\"dark\">\n      <Navbar.Brand href=\"#home\">One Page Video Web App</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link><Button onClick={changeFilter} variant=\"secondary\" value=''>ALL</Button></Nav.Link>\n          <Nav.Link><Button onClick={changeFilter} variant=\"primary\" value='movies-comedy'>Comedy</Button></Nav.Link>\n          <Nav.Link><Button onClick={changeFilter} variant=\"secondary\" value='movies-biography'>Biography</Button></Nav.Link>\n          <Nav.Link><Button onClick={changeFilter} variant=\"success\" value='movies-action'>Action</Button></Nav.Link>\n          <Nav.Link><Button onClick={changeFilter} variant=\"warning\" value='movies-mystery'>Mystery</Button></Nav.Link>\n          <Nav.Link><Button onClick={changeFilter} variant=\"danger\" value='movies-horror'>Horror</Button></Nav.Link>\n          <Nav.Link><Button onClick={changeFilter} variant=\"light\" value='movies-drama'>Drama</Button></Nav.Link>\n          <Nav.Link><Button onClick={changeFilter} variant=\"info\" value='movies-crime'>Crime</Button></Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  </header>\n)\n\nHeader.propTypes = {\n  changeFilter: PropTypes.func.isRequired\n}\n\nexport default Header\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Carousel } from 'react-responsive-carousel';\nimport { Modal, Button } from 'react-bootstrap';\n\nconst Video = ({ entries, onEnded }) => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      {Array.isArray(entries) && entries.length > 0 ? (\n        <Carousel useKeyboardArrows='true'>\n          {entries.map((entry) =>\n            <div style={{ \"height\": \"717px\" }}>\n              <img src={entry.images[0].url} alt={entry.title} />\n              <p className=\"legend\">\n                <video\n                  id={entry.id}\n                  key={entry.id}\n                  controls='false'\n                  playsInline\n                  light={entry.images[0].url}\n                  playIcon\n                  onEnded={onEnded}\n                >\n                  <source src={entry.contents[0].url} />\n                </video>\n                <p><a href={entry.contents[0].url}>{entry.title}</a></p>\n                <Button variant=\"primary\" onClick={handleShow}>\n                  More info\n              </Button>\n\n                <Modal show={show} onHide={handleClose}>\n                  <Modal.Header closeButton>\n                    <Modal.Title>INFO</Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body><p>Description:<br/>{entry.description}</p>\n                    <p>Type:<br/>{entry.type}</p>\n                    <p>Published Date:<br/>{new Date(entry.publishedDate).toString()}</p>\n                    <p>Available Date:<br/>{new Date(entry.availableDate).toString()}</p>\n                  </Modal.Body>\n                  <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                      Close\n                </Button>\n                  </Modal.Footer>\n                </Modal>\n              </p>\n            </div>\n          )}\n        </Carousel>\n      ) : (null)\n      }\n    </>\n  )\n}\n\nVideo.propTypes = {\n  entries: PropTypes.array.isRequired,\n  onEnded: PropTypes.func.isRequired\n}\n\nexport default Video\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Video from './Video'\n\nconst VideoList = ({ entries, filter, watched, onEnded }) => (\n  <div className=\"container-fluid\">\n    <div className=\"row\">\n      <div className=\"col align-self-start\">\n        {filter}\n      </div>\n      <div className=\"col align-self-center\">\n        {entries && filter && filter !== '' ? (\n          <Video entries={entries.filter((entry) => entry.categories.some((category) => category.id === filter))} onEnded={onEnded} />\n        ) : (<Video entries={entries} onEnded={onEnded} />)}\n      </div>\n    </div>\n    {Array.isArray(watched) && watched.length > 0 && entries.some((entry) => watched.includes(entry.id)) ? (\n      <div className=\"row\">\n        <div className=\"col align-self-start\">\n          Watch Again\n        </div>\n        <div className=\"col align-self-center\">\n          <Video entries={entries.filter((entry) => watched.includes(entry.id))} onEnded={onEnded} />\n        </div>\n      </div>\n    ) : (null)\n    }\n  </div>\n)\n\nVideoList.propTypes = {\n  entries: PropTypes.array.isRequired,\n  filter: PropTypes.string.isRequired,\n  watched: PropTypes.array.isRequired,\n  onEnded: PropTypes.func.isRequired\n}\n\nexport default VideoList\n","export default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case 'CHANGEFILTER':\r\n            return {\r\n                ...state,\r\n                filter: action.text\r\n            }\r\n        case 'UPDATEWATCHED': {\r\n            let temp\r\n            if (state)\r\n                temp = (state.watched || [])\r\n            else\r\n                temp = []\r\n            if (!(temp.includes(action.text)))\r\n                temp.push(action.text)\r\n            return {\r\n                ...state,\r\n                watched: temp,\r\n            }\r\n        };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducer/index\";\r\n//import { loadState, saveState } from \"../utils\";\r\nimport { persistStore, persistCombineReducers } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n// Import the reducer and create a store\r\n//import { reducer } from './todoListRedux'\r\n\r\nfunction configureStore(initialState) {\r\n  /*let createStoreWithMiddleware;\r\n\r\n  const middleware = process.env.__DEV__\r\n    ? applyMiddleware(thunk, createLogger())\r\n    : applyMiddleware(thunk);\r\n\r\n  createStoreWithMiddleware = compose(\r\n    middleware,\r\n  );*/\r\n\r\n  const config = {\r\n    key: 'root',\r\n    storage,\r\n  }\r\n\r\n  //const reducer = persistReducer(config,\r\n  //  rootReducer\r\n  //);\r\n\r\n  const reducer = persistCombineReducers(config, {root: rootReducer});\r\n\r\n  //const store = createStoreWithMiddleware(createStore)(reducer, initialState);\r\n  const store = createStore(reducer, initialState);\r\n  \r\n  console.log(store.getState())\r\n  // Enable persistence\r\n  let persistor = persistStore(store, null, () => {\r\n    store.getState() // if you want to get restoredState\r\n  });\r\n\r\n  /*if (module.hot) {\r\n    module.hot\r\n      .accept('../reducer', () => {\r\n        const nextRootReducer = require('../reducer/index');\r\n        store.replaceReducer(nextRootReducer);\r\n      });\r\n  }*/\r\n\r\n\r\n  store.subscribe(() => {\r\n    //saveState(store.getState().albums)\r\n  });\r\n\r\n  return { store, persistor };\r\n\r\n}\r\n\r\n// Add the autoRehydrate middleware to your redux store\r\n// const store = createStore(rootReducer);\r\n\r\n\r\nexport default configureStore","import React from \"react\";\nimport { render } from \"react-dom\";\nimport configureStore from \"./store\";\nimport { Provider, connect } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\nimport Index from './components/Index'\n\n// action creator\nfunction changeFilter(text) {\n  return {\n    type: \"CHANGEFILTER\",\n    text\n  };\n}\n\nfunction updateWatched(text) {\n  return {\n    type: \"UPDATEWATCHED\",\n    text\n  };\n}\n\nconst { store, persistor } = configureStore({\n  root: {\n    watched: [],\n    filter: null,\n    entries: []\n  }\n});\n\nclass App extends React.Component {\n  onChangeFilter = e => {\n    this.props.dispatch(changeFilter(e.nativeEvent.target.value));\n    window.location.reload(false);\n  };\n  onEnded = e => {\n    this.props.dispatch(updateWatched(e.nativeEvent.target.id));\n    window.location.reload(false);\n  };\n\n  render() {\n    return (\n      <PersistGate persistor={persistor}>\n        <Index filter={this.props.filter} changeFilter={this.onChangeFilter} onEnded={this.onEnded} watched={this.props.watched} />\n      </PersistGate>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  watched: state.root.watched,\n  filter: state.root.filter\n});\n\nconst ConnectedApp = connect(mapStateToProps)(App);\n\nrender(\n  <Provider store={store}>\n    <ConnectedApp />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}